package Codemeditation.DroidBoard;

import java.util.List;

import roboguice.activity.RoboActivity;
import roboguice.inject.InjectView;
import Codemeditation.Domain.Project;
import Codemeditation.DroidBoard.ProjectlistActivity.ProjectAdapter;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.widget.TextView;

public class ProjectActivity extends RoboActivity {
	@InjectView(R.id.project_header) TextView project_header;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.project_view);
		Intent intent = getIntent();
		Bundle bundle = intent.getExtras();
		int project_id = bundle.getInt("PROJECT_ID");
		String project_name = bundle.getString("PROJECT_NAME");
		project_header.setText(String.format("%s",project_name));
	}
	
    private class LoadPhasesctsTask extends AsyncTask<Void, Void, Void>{
    	private ProgressDialog dialog;

		@Override
    	protected void onPreExecute() {
    		dialog = ProgressDialog.show(ProjectlistActivity.this, "", "Loading projects ...", true);
    	}
    	
    	@Override
    	protected void onPostExecute(List<Project> result) {
    		if (dialog != null) dialog.dismiss();
    		setContentView(R.layout.projectlistview);

    		Project[] projects = result.toArray(new Project[0]);
    		ProjectAdapter adapter = new ProjectAdapter(projects);
    		
    		ProjectlistActivity.this.setListAdapter(adapter);
    		projectlist_title_view.setText(String.format("Active Projects: %s", result.size()));
    	}
    	
		@Override
		protected List<Project> doInBackground(Void... arg0) {
			return kanbanApi.GetProjects();
		}

    }
}
